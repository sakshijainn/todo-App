{"ast":null,"code":"var _jsxFileName = \"/Users/aniketjain/Desktop/SAKSHIJAIN/revise/todo/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //to get the data  from Localstorage\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocalItems = () => {\n  let list = localStorage.getItem(\"lists\");\n\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"lists\"));\n  } else {\n    return [];\n  }\n};\n\nfunction TodoList() {\n  _s();\n\n  const [todo, setTodo] = useState([getLocalItems()]);\n  const [input, setInput] = useState(\"\");\n\n  const inputHandler = e => {\n    setInput(e.target.value);\n  };\n\n  const todoHandler = input => {\n    if (!input) {} else {\n      const AllInput = {\n        id: new Date().getTime().toString(),\n        name: input\n      };\n      console.log(AllInput); // const updatedTodo = [AllInput, ...todo];\n\n      setTodo(xyz => {\n        return [...xyz, AllInput];\n      });\n      setInput(\"\");\n    }\n  };\n\n  const removeHandler = index => {\n    console.log(index);\n    const updatedItems = todo.filter(elem => {\n      return index !== elem.id;\n    });\n    setTodo(updatedItems);\n  };\n\n  const editItem = id => {\n    let newEditItem = todo.find(elem => {\n      return elem.id === id;\n    });\n    console.log(newEditItem);\n  }; //add data to localstorage\n\n\n  useEffect(() => {\n    localStorage.setItem(\"lists\", JSON.stringify(todo));\n  }, [todo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Hello TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: inputHandler,\n      type: \"text\",\n      placeholder: \"what is the todo?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => todoHandler(input),\n      children: \"Add to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), todo.map(elem => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: elem.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeHandler(elem.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            editItem(elem.id);\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, elem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"vY1tVltv3/SqMWAdqS+ngv+Y51c=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/aniketjain/Desktop/SAKSHIJAIN/revise/todo/src/components/TodoList.js"],"names":["React","useState","useEffect","getLocalItems","list","localStorage","getItem","JSON","parse","TodoList","todo","setTodo","input","setInput","inputHandler","e","target","value","todoHandler","AllInput","id","Date","getTime","toString","name","console","log","xyz","removeHandler","index","updatedItems","filter","elem","editItem","newEditItem","find","setItem","stringify","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n//to get the data  from Localstorage\nconst getLocalItems = () => {\n  let list = localStorage.getItem(\"lists\");\n\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"lists\"));\n  } else {\n    return [];\n  }\n};\n\nfunction TodoList() {\n  const [todo, setTodo] = useState([getLocalItems()]);\n  const [input, setInput] = useState(\"\");\n\n  const inputHandler = (e) => {\n    setInput(e.target.value);\n  };\n  const todoHandler = (input) => {\n    if (!input) {\n    } else {\n      const AllInput = { id: new Date().getTime().toString(), name: input };\n      console.log(AllInput);\n      // const updatedTodo = [AllInput, ...todo];\n      setTodo((xyz) => {\n        return [...xyz, AllInput];\n      });\n\n      setInput(\"\");\n    }\n  };\n\n  const removeHandler = (index) => {\n    console.log(index);\n    const updatedItems = todo.filter((elem) => {\n      return index !== elem.id;\n    });\n    setTodo(updatedItems);\n  };\n\n  const editItem = (id) => {\n    let newEditItem = todo.find((elem)=>{\n            return elem.id === id\n    })\n     console.log(newEditItem)\n  };\n\n  //add data to localstorage\n  useEffect(() => {\n    localStorage.setItem(\"lists\", JSON.stringify(todo));\n  }, [todo]);\n\n  return (\n    <div>\n      <h3>Hello TodoList</h3>\n      <input\n        onChange={inputHandler}\n        type=\"text\"\n        placeholder=\"what is the todo?\"\n      />\n      <button onClick={() => todoHandler(input)}>Add to do</button>\n\n      {todo.map((elem) => {\n        return (\n          <div key={elem.id}>\n            <h3>{elem.name}</h3>\n            <button onClick={() => removeHandler(elem.id)}>Delete</button>\n            <button\n              onClick={() => {\n                editItem(elem.id);\n              }}\n            >\n              Edit\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}