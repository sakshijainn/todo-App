{"ast":null,"code":"var _jsxFileName = \"/Users/aniketjain/Desktop/SAKSHIJAIN/revise/todo/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  //to get the data  from Local-Storage\n  const getLocalItems = () => {\n    let list = localStorage.getItem(\"lists\");\n\n    if (list) {\n      return JSON.parse(localStorage.getItem(\"lists\"));\n    } else {\n      return [];\n    }\n  };\n\n  const [todo, setTodo] = useState([getLocalItems()]);\n  console.log(todo);\n  const [input, setInput] = useState(\"\");\n  const [toggleSubmit, setToggleSubmit] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n\n  const inputHandler = e => {\n    setInput(e.target.value);\n  };\n\n  const todoHandler = input => {\n    if (!input) {\n      alert(\"please fill data\");\n    } else if (input && !toggleSubmit) {\n      setTodo(todo.map(elem => {\n        if (elem.id === isEditItem) {\n          return { ...elem,\n            name: input\n          };\n        }\n\n        return elem;\n      }));\n      setToggleSubmit(true);\n      setInput(\"\");\n      setIsEditItem(null);\n    } else {\n      const AllInput = {\n        id: new Date().getTime().toString(),\n        name: input\n      };\n      console.log(AllInput); // const updatedTodo = [AllInput, ...todo];\n\n      setTodo(xyz => {\n        return [...xyz, AllInput];\n      });\n      setInput(\"\");\n    }\n  };\n\n  const removeHandler = index => {\n    console.log(index);\n    const updatedItems = todo.filter(elem => {\n      return index !== elem.id;\n    });\n    setTodo(updatedItems);\n  };\n\n  const editItem = id => {\n    let newEditItem = todo.find(elem => {\n      return elem.id === id;\n    });\n    console.log(newEditItem);\n    setToggleSubmit(false);\n    setInput(newEditItem.name);\n    setIsEditItem(id);\n  }; //add data to local-storage\n\n\n  useEffect(() => {\n    localStorage.setItem(\"lists\", JSON.stringify(todo));\n  }, [todo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"todo-input edit\",\n      value: input,\n      onChange: inputHandler,\n      type: \"text\",\n      placeholder: \"what is the todo?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), toggleSubmit ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-button\",\n      onClick: () => todoHandler(input),\n      children: \"Add to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-button edit\",\n      onClick: () => todoHandler(input),\n      children: \"Update Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), todo.map(elem => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: elem.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"todo-button delete-icon\",\n            onClick: () => removeHandler(elem.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"todo-button edit edit-icon\",\n            onClick: () => editItem(elem.id),\n            children: \" Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, elem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"62s2HJnA5IEK0sHgqZIMHVutZRU=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/aniketjain/Desktop/SAKSHIJAIN/revise/todo/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoList","getLocalItems","list","localStorage","getItem","JSON","parse","todo","setTodo","console","log","input","setInput","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","inputHandler","e","target","value","todoHandler","alert","map","elem","id","name","AllInput","Date","getTime","toString","xyz","removeHandler","index","updatedItems","filter","editItem","newEditItem","find","setItem","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n\n\nfunction TodoList() {\n  //to get the data  from Local-Storage\n  const getLocalItems = () => {\n  let list = localStorage.getItem(\"lists\");\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"lists\"));\n  } else {\n    return [];\n  }\n};\n  const [todo, setTodo] = useState([getLocalItems()]);\n  console.log(todo);\n  const [input, setInput] = useState(\"\");\n  const [toggleSubmit, setToggleSubmit] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n\n  const inputHandler = (e) => {\n    setInput(e.target.value);\n  };\n\n  const todoHandler = (input) => {\n    if (!input) {\n      alert(\"please fill data\");\n    } else if (input && !toggleSubmit) {\n      setTodo(\n        todo.map((elem) => {\n          if (elem.id === isEditItem) {\n            return { ...elem, name: input };\n          }\n          return elem;\n        })\n      );\n      setToggleSubmit(true);\n      setInput(\"\");\n      setIsEditItem(null);\n    } else {\n      const AllInput = { id: new Date().getTime().toString(), name: input };\n      console.log(AllInput);\n      // const updatedTodo = [AllInput, ...todo];\n      setTodo((xyz) => {\n        return [...xyz, AllInput];\n      });\n\n      setInput(\"\");\n    }\n  };\n\n  const removeHandler = (index) => {\n    console.log(index);\n    const updatedItems = todo.filter((elem) => {\n      return index !== elem.id;\n    });\n    setTodo(updatedItems);\n  };\n\n  const editItem = (id) => {\n    let newEditItem = todo.find((elem) => {\n      return elem.id === id;\n    });\n    console.log(newEditItem);\n    setToggleSubmit(false);\n    setInput(newEditItem.name);\n    setIsEditItem(id);\n  };\n\n  //add data to local-storage\n  useEffect(() => {\n    localStorage.setItem(\"lists\", JSON.stringify(todo));\n  }, [todo]);\n\n\n  return (\n    <div className=\"todo-app\">\n      <h1>Hello TodoList</h1>\n      <input className= \"todo-input edit\"\n        value={input}\n        onChange={inputHandler}\n        type=\"text\"\n        placeholder=\"what is the todo?\"\n      />\n      {toggleSubmit ? (\n        <button className=\"todo-button\" onClick={() => todoHandler(input)}>Add to do</button>\n      ) : (\n        <button className=\"todo-button edit\" onClick={() => todoHandler(input)}>Update Item</button>\n      )}\n\n      {todo.map((elem) => {\n        return (\n          \n          <div className=\"todo-row\" key={elem.id}>\n            <h3>{elem.name}</h3>\n\n            <div className=\"icons\"> \n            <button className=\"todo-button delete-icon\"  onClick={() => removeHandler(elem.id)}>Delete</button>\n            <button className=\"todo-button edit edit-icon\" onClick={() => editItem(elem.id)}> Edit</button>\n            </div>\n          </div>\n         \n        );\n      })}\n    </div>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}