{"ast":null,"code":"var _jsxFileName = \"/Users/aniketjain/Desktop/SAKSHIJAIN/revise/todo/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //to get the data  from Local-Storage\n// const getLocalItems = () => {\n//   let list = localStorage.getItem(\"lists\");\n//   if (list) {\n//     return JSON.parse(localStorage.getItem(\"lists\"));\n//   } else {\n//     return [];\n//   }\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [name, setName] = useState(() => {\n  // getting stored value\n  const saved = localStorage.getItem(\"lists\");\n  const initialValue = JSON.parse(saved);\n  console.log(initialValue);\n  return initialValue || \"\";\n});\n\nfunction TodoList() {\n  _s();\n\n  const [todo, setTodo] = useState([getLocalItems()]);\n  const [input, setInput] = useState(\"\");\n  const [toggleSubmit, setToggleSubmit] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n\n  const inputHandler = e => {\n    setInput(e.target.value);\n  };\n\n  const todoHandler = input => {\n    if (!input) {\n      alert(\"please fill data\");\n    } else if (input && !toggleSubmit) {\n      setTodo(todo.map(elem => {\n        if (elem.id === isEditItem) {\n          return { ...elem,\n            name: input\n          };\n        }\n\n        return elem;\n      }));\n      setToggleSubmit(true);\n      setInput(\"\");\n      setIsEditItem(null);\n    } else {\n      const AllInput = {\n        id: new Date().getTime().toString(),\n        name: input\n      };\n      console.log(AllInput); // const updatedTodo = [AllInput, ...todo];\n\n      setTodo(xyz => {\n        return [...xyz, AllInput];\n      });\n      setInput(\"\");\n    }\n  };\n\n  const removeHandler = index => {\n    console.log(index);\n    const updatedItems = todo.filter(elem => {\n      return index !== elem.id;\n    });\n    setTodo(updatedItems);\n  };\n\n  const editItem = id => {\n    let newEditItem = todo.find(elem => {\n      return elem.id === id;\n    });\n    console.log(newEditItem);\n    setToggleSubmit(false);\n    setInput(newEditItem.name);\n    setIsEditItem(id);\n  }; //add data to local-storage\n\n\n  useEffect(() => {\n    localStorage.setItem(\"lists\", JSON.stringify(todo));\n  }, [todo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Hello TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: inputHandler,\n      type: \"text\",\n      placeholder: \"what is the todo?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), toggleSubmit ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => todoHandler(input),\n      children: \"Add to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => todoHandler(input),\n      children: \"Update Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), todo.map(elem => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: elem.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeHandler(elem.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            editItem(elem.id);\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, elem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"62s2HJnA5IEK0sHgqZIMHVutZRU=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/aniketjain/Desktop/SAKSHIJAIN/revise/todo/src/components/TodoList.js"],"names":["React","useState","useEffect","name","setName","saved","localStorage","getItem","initialValue","JSON","parse","console","log","TodoList","todo","setTodo","getLocalItems","input","setInput","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","inputHandler","e","target","value","todoHandler","alert","map","elem","id","AllInput","Date","getTime","toString","xyz","removeHandler","index","updatedItems","filter","editItem","newEditItem","find","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,MAAM;AACrC;AACA,QAAMI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAX,CAArB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACA,SAAOA,YAAY,IAAI,EAAvB;AACD,CAN+B,CAAhC;;AAYA,SAASK,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,CAACe,aAAa,EAAd,CAAD,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMsB,YAAY,GAAIC,CAAD,IAAO;AAC1BN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAKA,QAAMC,WAAW,GAAIV,KAAD,IAAW;AAC7B,QAAI,CAACA,KAAL,EAAY;AACVW,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACD,KAFD,MAEO,IAAIX,KAAK,IAAI,CAACE,YAAd,EAA4B;AACjCJ,MAAAA,OAAO,CACLD,IAAI,CAACe,GAAL,CAAUC,IAAD,IAAU;AACjB,YAAIA,IAAI,CAACC,EAAL,KAAYV,UAAhB,EAA4B;AAC1B,iBAAO,EAAE,GAAGS,IAAL;AAAW3B,YAAAA,IAAI,EAAEc;AAAjB,WAAP;AACD;;AACD,eAAOa,IAAP;AACD,OALD,CADK,CAAP;AAQAV,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAZM,MAYA;AACL,YAAMU,QAAQ,GAAG;AAAED,QAAAA,EAAE,EAAE,IAAIE,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,EAAN;AAAuChC,QAAAA,IAAI,EAAEc;AAA7C,OAAjB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYoB,QAAZ,EAFK,CAGL;;AACAjB,MAAAA,OAAO,CAAEqB,GAAD,IAAS;AACf,eAAO,CAAC,GAAGA,GAAJ,EAASJ,QAAT,CAAP;AACD,OAFM,CAAP;AAIAd,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GAzBD;;AA8BA,QAAMmB,aAAa,GAAIC,KAAD,IAAW;AAC/B3B,IAAAA,OAAO,CAACC,GAAR,CAAY0B,KAAZ;AACA,UAAMC,YAAY,GAAGzB,IAAI,CAAC0B,MAAL,CAAaV,IAAD,IAAU;AACzC,aAAOQ,KAAK,KAAKR,IAAI,CAACC,EAAtB;AACD,KAFoB,CAArB;AAGAhB,IAAAA,OAAO,CAACwB,YAAD,CAAP;AACD,GAND;;AAWA,QAAME,QAAQ,GAAIV,EAAD,IAAQ;AACvB,QAAIW,WAAW,GAAG5B,IAAI,CAAC6B,IAAL,CAAWb,IAAD,IAAU;AACpC,aAAOA,IAAI,CAACC,EAAL,KAAYA,EAAnB;AACD,KAFiB,CAAlB;AAGApB,IAAAA,OAAO,CAACC,GAAR,CAAY8B,WAAZ;AACAtB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,IAAAA,QAAQ,CAACwB,WAAW,CAACvC,IAAb,CAAR;AACAmB,IAAAA,aAAa,CAACS,EAAD,CAAb;AACD,GARD,CApDkB,CAgElB;;;AACA7B,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACsC,OAAb,CAAqB,OAArB,EAA8BnC,IAAI,CAACoC,SAAL,CAAe/B,IAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,KAAK,EAAEG,KADT;AAEE,MAAA,QAAQ,EAAEM,YAFZ;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YAFF,EAQGJ,YAAY,gBACX;AAAQ,MAAA,OAAO,EAAE,MAAMQ,WAAW,CAACV,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,gBAGX;AAAQ,MAAA,OAAO,EAAE,MAAMU,WAAW,CAACV,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,EAcGH,IAAI,CAACe,GAAL,CAAUC,IAAD,IAAU;AAClB,0BACE;AAAA,gCACE;AAAA,oBAAKA,IAAI,CAAC3B;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMkC,aAAa,CAACP,IAAI,CAACC,EAAN,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,OAAO,EAAE,MAAM;AACbU,YAAAA,QAAQ,CAACX,IAAI,CAACC,EAAN,CAAR;AACD,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAUD,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAdA,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAvGQlB,Q;;KAAAA,Q;AAyGT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n//to get the data  from Local-Storage\n// const getLocalItems = () => {\n//   let list = localStorage.getItem(\"lists\");\n\n//   if (list) {\n//     return JSON.parse(localStorage.getItem(\"lists\"));\n//   } else {\n//     return [];\n//   }\n// };\n\nconst [name, setName] = useState(() => {\n  // getting stored value\n  const saved = localStorage.getItem(\"lists\");\n  const initialValue = JSON.parse(saved);\n  console.log(initialValue)\n  return initialValue || \"\";\n});\n\n\n\n\n\nfunction TodoList() {\n  const [todo, setTodo] = useState([getLocalItems()]);\n  const [input, setInput] = useState(\"\");\n  const [toggleSubmit, setToggleSubmit] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n\n  const inputHandler = (e) => {\n    setInput(e.target.value);\n  };\n\n\n  const todoHandler = (input) => {\n    if (!input) {\n      alert(\"please fill data\");\n    } else if (input && !toggleSubmit) {\n      setTodo(\n        todo.map((elem) => {\n          if (elem.id === isEditItem) {\n            return { ...elem, name: input };\n          }\n          return elem;\n        })\n      );\n      setToggleSubmit(true);\n      setInput(\"\");\n      setIsEditItem(null);\n    } else {\n      const AllInput = { id: new Date().getTime().toString(), name: input };\n      console.log(AllInput);\n      // const updatedTodo = [AllInput, ...todo];\n      setTodo((xyz) => {\n        return [...xyz, AllInput];\n      });\n\n      setInput(\"\");\n    }\n  };\n\n\n\n\n  const removeHandler = (index) => {\n    console.log(index);\n    const updatedItems = todo.filter((elem) => {\n      return index !== elem.id;\n    });\n    setTodo(updatedItems);\n  };\n\n\n\n\n  const editItem = (id) => {\n    let newEditItem = todo.find((elem) => {\n      return elem.id === id;\n    });\n    console.log(newEditItem);\n    setToggleSubmit(false);\n    setInput(newEditItem.name);\n    setIsEditItem(id);\n  };\n\n\n\n  //add data to local-storage\n  useEffect(() => {\n    localStorage.setItem(\"lists\", JSON.stringify(todo));\n  }, [todo]);\n\n\n\n  return (\n    <div>\n      <h3>Hello TodoList</h3>\n      <input\n        value={input}\n        onChange={inputHandler}\n        type=\"text\"\n        placeholder=\"what is the todo?\"\n      />\n      {toggleSubmit ? (\n        <button onClick={() => todoHandler(input)}>Add to do</button>\n      ) : (\n        <button onClick={() => todoHandler(input)}>Update Item</button>\n      )}\n\n      {todo.map((elem) => {\n        return (\n          <div key={elem.id}>\n            <h3>{elem.name}</h3>\n            <button onClick={() => removeHandler(elem.id)}>Delete</button>\n            <button\n              onClick={() => {\n                editItem(elem.id);\n              }}\n            >\n              Edit\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}